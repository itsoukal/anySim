% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NatafInvD.R
\name{NatafInvD}
\alias{NatafInvD}
\title{Direct estimation of equivalent correlation coefficients.}
\usage{
NatafInvD(targetrho, fx, fy, paramlistfx, paramlistfy,
  NatafIntMethod = "GH", NoEval = 19, polydeg = 8, ...)
}
\arguments{
\item{targetrho}{A scalar or vector of target correlation coefficients.}

\item{fx}{A string indicating the quantile function of the distribution (i.e., the ICDF).}

\item{fy}{A string indicating the quantile function of the distribution (i.e., the ICDF).}

\item{paramlistfx}{A named list with the parameters of the distribution.}

\item{paramlistfy}{A named list with parameters of the distribution.}

\item{NatafIntMethod}{A string ("GH", "Int", or "MC"), indicating the integration method, to resolve the Nataf integral.}

\item{NoEval}{A scalar indicating (default: 9) the number of evaluation points for the integration methods.}

\item{polydeg}{A scalar indicating the order of the fitted polynomial. If polydeg=0, then an alternative parametric curve is fitted (see, Papalexiou, 2018).}

\item{...}{Additional named arguments for the selected "NatafIntMethod" method.}
}
\value{
A named list with two elements:
dfnataf: A dataframe that contains the pairs of Gaussian and resulting correlation coefficients, upon which the curve (polynomial or other) was fitted.
rzEq: A vector with the equivalent correlation coefficients, that result into the target ones (i.e., targetrho).
}
\description{
Direct estimation of equivalent correlation coefficients (i.e., in the Gaussian domain).
}
\note{
Avoid the use of the "GH" method (i.e., NatafIntMethod='GH'), when the marginal(s) are discrete.
}
\examples{
## The case of two identrical zero-inflated (i.e., mixed) distributions,
## with p0=0.9 a Gamma distribution
## for the continuous part with shape=0.1 and scale=1.
\dontrun{
fx=fy='qmixed'
pfx=pfy=list(Distr=qgamma, p0=0.9, shape=0.1, scale=1)
rhoz=seq(from=0, to=1 , length.out = 21)
rhox=NatafInt(rho = rhoz, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy)
plot(rhox,rhoz, col='red', pch=19); abline(0,1)
rhotarget=seq(from=0.0001, to=0.9999 , length.out = 210)
req=NatafInvD(targetrho = rhotarget, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy,
              NatafIntMethod = 'GH', polydeg=8, NoEval = 9)
points(rhotarget, req, col='blue', pch=17);

req=NatafInvD(targetrho = rhotarget, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy,
              NatafIntMethod = 'GH', polydeg=8, NoEval = 9)
points(rhotarget, req, col='green')
}
## The case with identical Bernoulli distributions, with size=1 and prob=0.2.

\dontrun{
fx=fy='qbinom'
pfx=pfy=list(size=1, prob=0.2)
rhoz=seq(from=0, to=1 , length.out = 21)
rhox=NatafInt(rho = rhoz, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy)
plot(rhox,rhoz, col='red', pch=19); abline(0,1)
rhotarget=seq(from=0.0001, to=0.9999 , length.out = 210)
req=NatafInvD(targetrho = rhotarget, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy,
              NatafIntMethod = 'Int', polydeg=8, NoEval = 9)$rzEq
points(rhotarget, req, col='blue', pch=17);

req2=NatafInvD(targetrho = rhotarget, fx = fx, fy = fy, paramlistfx = pfx, paramlistfy = pfy,
              NatafIntMethod = 'Int', polydeg=8, NoEval = 9)$rzEq
points(rhotarget, req2, col='green')
}

}

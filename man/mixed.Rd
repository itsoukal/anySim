% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dpqmixed.R
\name{mixed}
\alias{mixed}
\alias{dmixed}
\alias{pmixed}
\alias{qmixed}
\alias{rmixed}
\title{Zero-Inflated distribution model (i.e., mixed)}
\usage{
dmixed(x, Distr, p0, ...)

pmixed(q, Distr, p0, ...)

qmixed(p, Distr, p0, ...)

rmixed(n, Distr, p0, ...)
}
\arguments{
\item{x, q}{Vector of quantiles.}

\item{Distr}{The name (as a function) of the continuous distribution model.}

\item{p0}{Probability of zero values (i.e., zero-inflation).}

\item{...}{Additional named arguments containing the continuous distribution parameters}

\item{p}{Vector of probabilities.}

\item{n}{Number of observations. If length(n) > 1, the length is taken to be the number required.}
}
\value{
dmixed gives the density of the zero-inflated (i.e., mixed) distribution model.
pmixed gives the cdf of the zero-inflated (i.e., mixed) distribution model.
qmixed gives the quantile (ICDF) of the zero-inflated (i.e., mixed) distribution model.
rmixed gives random variates from the zero-inflated (i.e., mixed) distribution model.
}
\description{
Density, distribution function, quantile function and random generation
 for the zero-inflated (i.e., mixed) distribution model. This model is composed by two parts,
 1) the discrete part, which regards an atom at zero, and
 2) the continuous part, which regards a continuous distribution model (J-shaped and with left support >0).
}
\examples{
## Plot the CDF of a Gamma distribution.
p=seq(0,1,0.01)
x=qmixed(p, Distr = qgamma, p0=0.7, shape=0.5, scale=1)
plot(x, p)

## Generate 100000 random variables with p0=0.7 and
## Gamma distribution for the continoous part.
X=rmixed(1000, qgamma, p0=0.7, shape=0.5, scale=1)
hist(X)

## Generate 100000 random variables with p0=0.7 and
## Burr type XII distribution for the continuous part.
## The actuar package is required, since it contains
## the d,p,q,r functions of the Burr type XII distribution.
require(actuar)
X=rmixed(1000, qburr, p0=0.7, shape1=5, shape2=1, scale=1)
hist(X)
plot(sort(X[X>0]), 1-ppoints(X[X>0], a=0), log='xy',
xlab = 'x', ylab = 'P[X>x]', main='Prob of exceedance plot')

}
